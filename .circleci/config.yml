version: '2.1'

jobs:
    composer:
        docker:
            - image: composer
        working_directory: ~/repository
        steps:
            - checkout
            - restore_cache:
                key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
            - run:
                command: |
                    composer install --no-interaction --no-progress;
                    composer dumpautoload --classmap-authoritative
            - save_cache:
                key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
                paths:
                    - ./vendor
            - persist_to_workspace:
                root: .
                paths:
                    - vendor

    phpcs:
        docker:
            - image: steevanb/php-code-sniffs:2.0.9
              environment:
                  PHPCS_BOOTSTRAP: /var/phpcs/.circleci/phpcs.bootstrap.php
                  PHPCS_PARAMETERS: --warning-severity=0 --ignore=/vendor/
        working_directory: /var/phpcs
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: phpcs
                command: /var/entrypoint.sh

    phpcf:
        docker:
            - image: steevanb/php-code-fixer:2.0.19
        working_directory: /var/php-code-fixer
        steps:
            - checkout
            - run:
                  name: phpcf
                  command: phpcf .

    phpunit:
        docker:
            - image: circleci/php:7.3
            - image: circleci/mysql:5.7
              environment:
                  MYSQL_ROOT_PASSWORD: root
                  MYSQL_DATABASE: doctrine_examples
        working_directory: ~/repository
        steps:
            - checkout
            - attach_workspace:
                at: .
            - run:
                name: Install MySQL driver
                command: sudo docker-php-ext-install mysqli
            - run:
                name: Waiting for MySQL to be ready
                command: |
                    for i in `seq 1 10`;
                    do
                        nc -z 127.0.0.1 3306 && echo Success && exit 0
                        echo -n .
                        sleep 1
                    done
                    echo Failed waiting for MySQL && exit 1
            - run:
                  name: Update database schema
                  command: ./vendor/bin/doctrine orm:schema-tool:update --force
            - run:
                name: phpunit
                command: bin/phpunit

workflows:
    version: '2.1'
    Code quality:
        jobs:
            - composer
            - phpcs
            - phpcf
            - phpunit:
                requires:
                    - composer
